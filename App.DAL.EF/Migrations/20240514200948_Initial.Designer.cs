// <auto-generated />
using System;
using App.DAL.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace App.DAL.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240514200948_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("App.Domain.Identity.AppRefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpirationDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("PreviousExpirationDt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PreviousRefreshToken")
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("character varying(64)");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("App.Domain.Identity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("App.Domain.Identity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<bool>("AgreesToTerms")
                        .HasColumnType("boolean");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("App.Domain.Identity.AppUserRole", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("SuperSectorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("SuperSectorId");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6"),
                            Description = "Manufacturing"
                        },
                        new
                        {
                            Id = new Guid("0d1709d0-3df8-4462-8770-1da6694a1bc9"),
                            Description = "Construction Materials",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("046157a9-a497-420c-b8f1-1234b4bea756"),
                            Description = "Food and Beverage",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("4b12e7cc-f507-475a-b198-45646f2dc4d2"),
                            Description = "Bakery &amp; confectionery products",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("a868e04a-6d35-4eb3-8f81-539dfa5aedd8"),
                            Description = "Beverages",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("86a44339-0353-4950-8666-f56795cd2fbe"),
                            Description = "Fish &amp; fish products",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("13c56f1c-ccf7-40aa-9c22-67abfbf97b13"),
                            Description = "Meat &amp; meat products",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("a9b73b0c-0ea3-4792-8522-a741463888b6"),
                            Description = "Milk &amp; dairy products",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("853c0ac3-2dda-4081-9c49-f9125d975889"),
                            Description = "Other",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("ae70e815-feba-43fc-a63c-ca8770c8cf34"),
                            Description = "Sweets &amp; snack food",
                            SuperSectorId = new Guid("046157a9-a497-420c-b8f1-1234b4bea756")
                        },
                        new
                        {
                            Id = new Guid("3d78fecc-e4bc-4110-a82c-d6309a818613"),
                            Description = "Electronics and Optics",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c"),
                            Description = "Furniture",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("5da3c473-79b4-4bb5-adca-7fa96bd0ab53"),
                            Description = "Bathroom/sauna",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("1246ce33-8daf-4a43-ba2f-267c8edbb743"),
                            Description = "Bedroom",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("ee9c0b26-1e9c-4127-8e73-204eb68527c3"),
                            Description = "Children’s room",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("77f6ce62-8a5e-44f6-a623-354393d71ea9"),
                            Description = "Kitchen",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("e8d4e310-7b24-41f6-816c-37ce78c727c3"),
                            Description = "Living room",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("a8e94d75-f5e9-41b1-96f1-eb56551067c3"),
                            Description = "Office",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("ef179370-a0ba-413f-b810-d68f0a793446"),
                            Description = "Other (Furniture)",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("880b1b11-7a44-4636-87f5-f60b4ca720da"),
                            Description = "Outdoor",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("408cacab-4d25-4b48-b2dc-971293f78821"),
                            Description = "Project furniture",
                            SuperSectorId = new Guid("82b9c0c1-0f9f-4712-b1b3-135b5c3bb75c")
                        },
                        new
                        {
                            Id = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb"),
                            Description = "Machinery",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("08f64162-a545-4c92-a886-ec7df6713cb8"),
                            Description = "Machinery components",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("f80ad83c-fc72-4073-bb2e-87facabbbfec"),
                            Description = "Machinery equipment/tools",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("f9349e44-58aa-4976-b0d3-13d342a56733"),
                            Description = "Manufacture of machinery",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("08f9c602-4a72-4b9a-9123-d05dca9570c6"),
                            Description = "Maritime",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("9732f4cb-8fb4-4e9d-9b5c-8fdb42090ea5"),
                            Description = "Aluminium and steel workboats",
                            SuperSectorId = new Guid("08f9c602-4a72-4b9a-9123-d05dca9570c6")
                        },
                        new
                        {
                            Id = new Guid("31956b83-31e5-47a8-aa27-1817c7ff57ab"),
                            Description = "Boat/Yacht building",
                            SuperSectorId = new Guid("08f9c602-4a72-4b9a-9123-d05dca9570c6")
                        },
                        new
                        {
                            Id = new Guid("4beb5253-ce43-41cc-ba03-8cbd59ae6b16"),
                            Description = "Ship repair and conversion",
                            SuperSectorId = new Guid("08f9c602-4a72-4b9a-9123-d05dca9570c6")
                        },
                        new
                        {
                            Id = new Guid("371a408f-7812-435f-b80a-d3ffb7e301a9"),
                            Description = "Metal structures",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("1dc14ced-651b-4944-a786-a52424e15a0d"),
                            Description = "Other",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("e74d5e79-ea61-45c3-a35e-069fc262afa6"),
                            Description = "Repair and maintenance service",
                            SuperSectorId = new Guid("eae7965e-5ace-44d0-9b94-af116aa356eb")
                        },
                        new
                        {
                            Id = new Guid("170355ac-0996-42cf-a1e5-d3992c187186"),
                            Description = "Metalworking",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("3075fb1c-339f-4666-943c-c4d5f10812fb"),
                            Description = "Construction of metal structures",
                            SuperSectorId = new Guid("170355ac-0996-42cf-a1e5-d3992c187186")
                        },
                        new
                        {
                            Id = new Guid("33a143c7-ca06-42b1-a4b9-75bfab987860"),
                            Description = "Houses and buildings",
                            SuperSectorId = new Guid("170355ac-0996-42cf-a1e5-d3992c187186")
                        },
                        new
                        {
                            Id = new Guid("ee504569-4666-4cd9-85a0-a2c9cd0d4e83"),
                            Description = "Metal products",
                            SuperSectorId = new Guid("170355ac-0996-42cf-a1e5-d3992c187186")
                        },
                        new
                        {
                            Id = new Guid("1b5b36a4-214a-482c-b9f1-01f6c6152979"),
                            Description = "Metal works",
                            SuperSectorId = new Guid("170355ac-0996-42cf-a1e5-d3992c187186")
                        },
                        new
                        {
                            Id = new Guid("4fc45347-e65b-44ca-b63b-90a5d29737ab"),
                            Description = "CNC-machining",
                            SuperSectorId = new Guid("1b5b36a4-214a-482c-b9f1-01f6c6152979")
                        },
                        new
                        {
                            Id = new Guid("708a8638-35c2-4b7f-80dc-cfeefeb90d08"),
                            Description = "Forgings, Fasteners",
                            SuperSectorId = new Guid("1b5b36a4-214a-482c-b9f1-01f6c6152979")
                        },
                        new
                        {
                            Id = new Guid("5b25ef14-4b9d-4706-8ed1-cc7d115984ed"),
                            Description = "Gas, Plasma, Laser cutting",
                            SuperSectorId = new Guid("1b5b36a4-214a-482c-b9f1-01f6c6152979")
                        },
                        new
                        {
                            Id = new Guid("a98d02ea-beaa-41f6-a01c-d48d27a94b2c"),
                            Description = "MIG, TIG, Aluminum welding",
                            SuperSectorId = new Guid("1b5b36a4-214a-482c-b9f1-01f6c6152979")
                        },
                        new
                        {
                            Id = new Guid("11c4d645-baeb-4033-a965-4d39915aea87"),
                            Description = "Plastic and Rubber",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("a158fdbc-2148-4d6f-856d-7479dd9f31fb"),
                            Description = "Packaging",
                            SuperSectorId = new Guid("11c4d645-baeb-4033-a965-4d39915aea87")
                        },
                        new
                        {
                            Id = new Guid("9f5941a1-a4ef-4e31-9114-b6333e6e8d44"),
                            Description = "Plastic goods",
                            SuperSectorId = new Guid("11c4d645-baeb-4033-a965-4d39915aea87")
                        },
                        new
                        {
                            Id = new Guid("e3a9da1a-9925-4022-ae32-af03f2f217ad"),
                            Description = "Plastic processing technology",
                            SuperSectorId = new Guid("11c4d645-baeb-4033-a965-4d39915aea87")
                        },
                        new
                        {
                            Id = new Guid("29692620-cc6b-407c-a27d-ba918c598621"),
                            Description = "Blowing",
                            SuperSectorId = new Guid("e3a9da1a-9925-4022-ae32-af03f2f217ad")
                        },
                        new
                        {
                            Id = new Guid("e9c07801-4440-4a8b-9de7-9d3010b0d6d3"),
                            Description = "Moulding",
                            SuperSectorId = new Guid("e3a9da1a-9925-4022-ae32-af03f2f217ad")
                        },
                        new
                        {
                            Id = new Guid("fdb9e91a-9120-439f-a6a1-ff9356949420"),
                            Description = "Plastics welding and processing",
                            SuperSectorId = new Guid("e3a9da1a-9925-4022-ae32-af03f2f217ad")
                        },
                        new
                        {
                            Id = new Guid("19b854ef-dd95-4bca-adef-b8da58d537ed"),
                            Description = "Plastic profiles",
                            SuperSectorId = new Guid("11c4d645-baeb-4033-a965-4d39915aea87")
                        },
                        new
                        {
                            Id = new Guid("4783bc42-20f7-4218-a346-cb067668cdf5"),
                            Description = "Printing",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("d279196b-fb78-4f6b-927a-f10e32714fc0"),
                            Description = "Advertising",
                            SuperSectorId = new Guid("4783bc42-20f7-4218-a346-cb067668cdf5")
                        },
                        new
                        {
                            Id = new Guid("c6c2030d-27af-478b-aeb3-2d87ec872f81"),
                            Description = "Book/Periodicals printing",
                            SuperSectorId = new Guid("4783bc42-20f7-4218-a346-cb067668cdf5")
                        },
                        new
                        {
                            Id = new Guid("19f2d59d-c083-40e1-a09c-6ac38fc42145"),
                            Description = "Labelling and packaging printing",
                            SuperSectorId = new Guid("4783bc42-20f7-4218-a346-cb067668cdf5")
                        },
                        new
                        {
                            Id = new Guid("646b7716-9852-45db-ad7c-da6e6772b3bb"),
                            Description = "Textile and Clothing",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("1b4dcf27-e168-4ead-9e9c-17f71e8b33e9"),
                            Description = "Clothing",
                            SuperSectorId = new Guid("646b7716-9852-45db-ad7c-da6e6772b3bb")
                        },
                        new
                        {
                            Id = new Guid("84fb9773-cf97-4242-97a4-b8bc4244aa02"),
                            Description = "Textile",
                            SuperSectorId = new Guid("646b7716-9852-45db-ad7c-da6e6772b3bb")
                        },
                        new
                        {
                            Id = new Guid("0641e2af-d4d3-49e3-b8d3-3ffc91fdbce9"),
                            Description = "Wood",
                            SuperSectorId = new Guid("32fc0433-e12f-4017-9b23-927c910fb1f6")
                        },
                        new
                        {
                            Id = new Guid("c662db43-fe38-47a9-99d5-80f02f2c6eef"),
                            Description = "Other",
                            SuperSectorId = new Guid("0641e2af-d4d3-49e3-b8d3-3ffc91fdbce9")
                        },
                        new
                        {
                            Id = new Guid("2ded67d1-457c-4bd8-8ce8-0080511144c4"),
                            Description = "Wooden building materials",
                            SuperSectorId = new Guid("0641e2af-d4d3-49e3-b8d3-3ffc91fdbce9")
                        },
                        new
                        {
                            Id = new Guid("4485157b-40c4-405d-8d98-a5367b98f74d"),
                            Description = "Wooden houses",
                            SuperSectorId = new Guid("0641e2af-d4d3-49e3-b8d3-3ffc91fdbce9")
                        },
                        new
                        {
                            Id = new Guid("acee74c3-cdd4-4c18-93c8-2a485d61d52e"),
                            Description = "Other"
                        },
                        new
                        {
                            Id = new Guid("99b24a88-e6f5-43ff-9e23-b5c0e54fc49a"),
                            Description = "Creative industries",
                            SuperSectorId = new Guid("acee74c3-cdd4-4c18-93c8-2a485d61d52e")
                        },
                        new
                        {
                            Id = new Guid("3b5a581a-399b-43e5-9cd3-113b9f394c06"),
                            Description = "Energy technology",
                            SuperSectorId = new Guid("acee74c3-cdd4-4c18-93c8-2a485d61d52e")
                        },
                        new
                        {
                            Id = new Guid("817dc386-beaf-4b3b-9bb2-4b98c6a32649"),
                            Description = "Environment",
                            SuperSectorId = new Guid("acee74c3-cdd4-4c18-93c8-2a485d61d52e")
                        },
                        new
                        {
                            Id = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8"),
                            Description = "Service"
                        },
                        new
                        {
                            Id = new Guid("4ec419ae-9eeb-49d4-9b6d-383e561e95d0"),
                            Description = "Business services",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("b6ff692e-c9f8-40b8-8cf6-85ae6991b387"),
                            Description = "Engineering",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("4ba5fd39-7a7c-48c0-a9a1-81ee64a074c3"),
                            Description = "Information Technology and Telecommunications",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("37093024-3be1-4be2-8c54-9f921922d90e"),
                            Description = "Data processing, Web portals, E-marketing",
                            SuperSectorId = new Guid("4ba5fd39-7a7c-48c0-a9a1-81ee64a074c3")
                        },
                        new
                        {
                            Id = new Guid("372b1d41-619b-4a6e-9d04-f76be8cee6e3"),
                            Description = "Programming, Consultancy",
                            SuperSectorId = new Guid("4ba5fd39-7a7c-48c0-a9a1-81ee64a074c3")
                        },
                        new
                        {
                            Id = new Guid("589bf163-9180-43f0-9cf8-165c5cb2149d"),
                            Description = "Software, Hardware",
                            SuperSectorId = new Guid("4ba5fd39-7a7c-48c0-a9a1-81ee64a074c3")
                        },
                        new
                        {
                            Id = new Guid("01f0db6b-5b72-49d9-97c7-101a25e8be27"),
                            Description = "Telecommunications",
                            SuperSectorId = new Guid("4ba5fd39-7a7c-48c0-a9a1-81ee64a074c3")
                        },
                        new
                        {
                            Id = new Guid("3ee0c8fc-e5e9-412c-b83a-67de4101153e"),
                            Description = "Tourism",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("564886b1-1c65-48fb-99da-bbd047e43e77"),
                            Description = "Translation services",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("28caca3c-a99b-4bb9-b19b-11d6e3b07b70"),
                            Description = "Transport and Logistics",
                            SuperSectorId = new Guid("a0b37c00-72bd-4522-a5d5-f0902a66d6a8")
                        },
                        new
                        {
                            Id = new Guid("d54417b1-dec1-4405-b14a-c1d350e1c750"),
                            Description = "Air",
                            SuperSectorId = new Guid("28caca3c-a99b-4bb9-b19b-11d6e3b07b70")
                        },
                        new
                        {
                            Id = new Guid("0c447d9b-3608-4494-86f4-496d74c95815"),
                            Description = "Rail",
                            SuperSectorId = new Guid("28caca3c-a99b-4bb9-b19b-11d6e3b07b70")
                        },
                        new
                        {
                            Id = new Guid("f7692977-8c0f-49e2-bf12-0e5cc00c555f"),
                            Description = "Road",
                            SuperSectorId = new Guid("28caca3c-a99b-4bb9-b19b-11d6e3b07b70")
                        },
                        new
                        {
                            Id = new Guid("5116d5b8-dd3c-4b6f-baf6-b8a53a3d30f3"),
                            Description = "Water",
                            SuperSectorId = new Guid("28caca3c-a99b-4bb9-b19b-11d6e3b07b70")
                        });
                });

            modelBuilder.Entity("App.Domain.UserInSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AppUserId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("SectorId")
                        .HasColumnType("uuid");

                    b.Property<string>("SectorWithSuperSectorsName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId");

                    b.HasIndex("SectorId");

                    b.ToTable("UserInSectors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("App.Domain.Identity.AppRefreshToken", b =>
                {
                    b.HasOne("App.Domain.Identity.AppUser", "AppUser")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("App.Domain.Identity.AppUserRole", b =>
                {
                    b.HasOne("App.Domain.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.HasOne("App.Domain.Sector", "SuperSector")
                        .WithMany("Sectors")
                        .HasForeignKey("SuperSectorId");

                    b.Navigation("SuperSector");
                });

            modelBuilder.Entity("App.Domain.UserInSector", b =>
                {
                    b.HasOne("App.Domain.Identity.AppUser", "AppUser")
                        .WithMany("UserInSectors")
                        .HasForeignKey("AppUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("App.Domain.Sector", "Sector")
                        .WithMany("UserInSectors")
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppUser");

                    b.Navigation("Sector");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("App.Domain.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("App.Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("App.Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("App.Domain.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("App.Domain.Identity.AppUser", b =>
                {
                    b.Navigation("RefreshTokens");

                    b.Navigation("UserInSectors");
                });

            modelBuilder.Entity("App.Domain.Sector", b =>
                {
                    b.Navigation("Sectors");

                    b.Navigation("UserInSectors");
                });
#pragma warning restore 612, 618
        }
    }
}
